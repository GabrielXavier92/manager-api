scalar DateTime

enum Gender {
  MASCULINO
  FEMININO
}

type Query {
  patient(id: ID!): Patient!
  patients(take: Int, cursor: ID, filter: String): GetPatients
}

type Mutation {
  createPatient(input: PatientInput!): Patient!
  updatePatient(id: ID!, input: PatientInput!): Patient!
}

input PatientInput {
  name: String!
  birth: String
  gender: Gender
  email: String
  country: String
  cep: String
  state: String
  city: String
  street: String
  neighborhood: String
  complement: String
}

type QueryInfo {
  ammount: Int
}

type GetPatients {
  queryInfo: QueryInfo
  patients: [Patient]
}

type Patient {
  id: ID!
  name: String!
  gender: Gender
  birth: String
  email: String
  country: String
  cep: String
  state: String
  city: String
  street: String
  neighborhood: String
  complement: String
  createdAt: DateTime
  updatedAt: DateTime
}